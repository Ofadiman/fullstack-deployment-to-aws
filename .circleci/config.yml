version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0
  aws-ecr: circleci/aws-ecr@6.15
  aws-ecs: circleci/aws-ecs@2.0.0

executors:
  node:
    docker:
      - image: cimg/node:16.13.2
  node_with_postgres:
    docker:
      - image: cimg/node:16.13.2
        environment:
          NODE_ENV: test
          POSTGRES_DATABASE: postgres
          POSTGRES_HOST: localhost
          POSTGRES_PASSWORD: postgres
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          SERVER_PORT: 3001
      - image: cimg/postgres:13.4
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres

commands:
  bootstrap_project:
    steps:
      - run:
          name: Install root dependecies
          command: npm ci
      - run:
          name: Bootstrap packages
          command: npx lerna bootstrap

jobs:
  run_tests:
    executor: node_with_postgres
    steps:
      - checkout
      - bootstrap_project
      - run:
          name: Build api package
          command: npx lerna run build --scope=@fullstack-deployment-to-aws/api
      - run:
          name: Run tests
          command: npx lerna run test:ci --stream

  build_packages:
    executor: node
    steps:
      - checkout
      - bootstrap_project
      - run:
          name: Build packages
          command: npx lerna run build --stream

  build_and_push_image:
    executor:
      name: aws-ecr/default
      use-docker-layer-caching: true
    parameters:
      aws_access_key_id:
        type: env_var_name
      aws_secret_access_key:
        type: env_var_name
      aws_ecr_url:
        type: env_var_name
      aws_region:
        type: env_var_name
      repo:
        type: env_var_name
      dockerfile:
        type: string
      tag:
        type: string
    steps:
      - aws-ecr/build-and-push-image:
          attach-workspace: true
          aws-access-key-id: << parameters.aws_access_key_id >>
          aws-secret-access-key: << parameters.aws_secret_access_key >>
          account-url: << parameters.aws_ecr_url >>
          dockerfile: << parameters.dockerfile >>
          no-output-timeout: 20m
          region: << parameters.aws_region >>
          repo: << parameters.repo >>
          tag: << parameters.tag >>

workflows:
  countinuous_integration:
    jobs:
      - run_tests
      - build_packages
      - aws-ecr/build-and-push-image:
          dockerfile: prod.Dockerfile
          path: packages/api
          repo: '${AWS_ECR_REPO}'
          tag: '${CIRCLE_SHA1}'
          requires:
            - run_tests
            - build_packages
          filters:
            branches:
              only:
                - main
